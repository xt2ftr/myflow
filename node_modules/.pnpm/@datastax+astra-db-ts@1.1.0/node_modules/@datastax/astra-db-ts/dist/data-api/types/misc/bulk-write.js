"use strict";
// Copyright DataStax, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// noinspection DuplicatedCode
Object.defineProperty(exports, "__esModule", { value: true });
exports.BulkWriteResult = void 0;
/**
 * Represents the result of a bulk write operation.
 *
 * @public
 */
class BulkWriteResult {
    /**
     * Should not be instantiated directly.
     *
     * @internal
     */
    constructor(
    /**
     * The number of documents deleted.
     */
    deletedCount = 0, 
    /**
     * The number of documents inserted.
     */
    insertedCount = 0, 
    /**
     * The number of documents matched by an update operation.
     */
    matchedCount = 0, 
    /**
     * The number of documents modified.
     */
    modifiedCount = 0, 
    /**
     * The number of documents upserted.
     */
    upsertedCount = 0, 
    /**
     * Upserted document generated ids. Sparse array, indexed by the position of the upserted operation in the bulk
     * write request.
     */
    upsertedIds = {}, _raw = []) {
        Object.defineProperty(this, "deletedCount", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: deletedCount
        });
        Object.defineProperty(this, "insertedCount", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: insertedCount
        });
        Object.defineProperty(this, "matchedCount", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: matchedCount
        });
        Object.defineProperty(this, "modifiedCount", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: modifiedCount
        });
        Object.defineProperty(this, "upsertedCount", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: upsertedCount
        });
        Object.defineProperty(this, "upsertedIds", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: upsertedIds
        });
        Object.defineProperty(this, "_raw", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: _raw
        });
    }
    /**
     * Returns the raw, internal result.
     *
     * @returns The raw, internal result.
     */
    getRawResponse() {
        return this._raw;
    }
    /**
     * Returns the upserted id at the given index.
     *
     * @param index - The index of the upserted id to retrieve.
     *
     * @returns The upserted id at the given index, or `undefined` if there is no upserted id at that index.
     */
    getUpsertedIdAt(index) {
        return this.upsertedIds[index];
    }
}
exports.BulkWriteResult = BulkWriteResult;
//# sourceMappingURL=bulk-write.js.map