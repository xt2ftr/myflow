/**
 * This file was auto-generated by Fern from our API Definition.
 */
/// <reference types="node" />
import * as environments from "../../../../environments";
import * as core from "../../../../core";
import * as Cohere from "../../../index";
import * as fs from "fs";
export declare namespace Datasets {
    interface Options {
        environment?: core.Supplier<environments.CohereEnvironment | string>;
        token?: core.Supplier<core.BearerToken | undefined>;
        clientName?: core.Supplier<string | undefined>;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
        maxRetries?: number;
    }
}
export declare class Datasets {
    protected readonly _options: Datasets.Options;
    constructor(_options?: Datasets.Options);
    /**
     * List datasets that have been created.
     *
     * @param {Cohere.DatasetsListRequest} request
     * @param {Datasets.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link Cohere.TooManyRequestsError}
     *
     * @example
     *     await cohere.datasets.list()
     */
    list(request?: Cohere.DatasetsListRequest, requestOptions?: Datasets.RequestOptions): Promise<Cohere.DatasetsListResponse>;
    /**
     * Create a dataset by uploading a file. See ['Dataset Creation'](https://docs.cohere.com/docs/datasets#dataset-creation) for more information.
     *
     * @param {File | fs.ReadStream} data
     * @param {File | fs.ReadStream | undefined} evalData
     * @param {Cohere.DatasetsCreateRequest} request
     * @param {Datasets.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link Cohere.TooManyRequestsError}
     *
     * @example
     *     await cohere.datasets.create(fs.createReadStream("/path/to/your/file"), fs.createReadStream("/path/to/your/file"), {
     *         name: "name",
     *         type: Cohere.DatasetType.EmbedInput
     *     })
     */
    create(data: File | fs.ReadStream, evalData: File | fs.ReadStream | undefined, request: Cohere.DatasetsCreateRequest, requestOptions?: Datasets.RequestOptions): Promise<Cohere.DatasetsCreateResponse>;
    /**
     * View the dataset storage usage for your Organization. Each Organization can have up to 10GB of storage across all their users.
     *
     * @param {Datasets.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link Cohere.TooManyRequestsError}
     *
     * @example
     *     await cohere.datasets.getUsage()
     */
    getUsage(requestOptions?: Datasets.RequestOptions): Promise<Cohere.DatasetsGetUsageResponse>;
    /**
     * Retrieve a dataset by ID. See ['Datasets'](https://docs.cohere.com/docs/datasets) for more information.
     *
     * @param {string} id
     * @param {Datasets.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link Cohere.TooManyRequestsError}
     *
     * @example
     *     await cohere.datasets.get("id")
     */
    get(id: string, requestOptions?: Datasets.RequestOptions): Promise<Cohere.DatasetsGetResponse>;
    /**
     * Delete a dataset by ID. Datasets are automatically deleted after 30 days, but they can also be deleted manually.
     *
     * @param {string} id
     * @param {Datasets.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link Cohere.TooManyRequestsError}
     *
     * @example
     *     await cohere.datasets.delete("id")
     */
    delete(id: string, requestOptions?: Datasets.RequestOptions): Promise<Record<string, unknown>>;
    protected _getAuthorizationHeader(): Promise<string>;
}
